require(readr)
require(dplyr)
unfilt <- read_csv("PA_REDISTRICTING_DATA.csv")
require(sf)
munis <- st_read("tl_2020_42000_cousub20.shp")
munis <- st_read("tl_2020_42003_cousub20.shp")
red_munis <- unfilt %>%
filter(GEOID %IN% munis$GEOID20)
red_munis <- unfilt %>%
filter(GEOID %in% munis$GEOID20)
)
munis$GEOID20
unfilt$GEOID
View(red_munis)
View(unfilt)
red_munis <- unfilt %>%
filter(GEOCODE %in% munis$GEOID20)
View(red_munis)
red_munis <- unfilt %>%
right_join(munis, by = c("GEOID20" = "GEOCODE"))
red_munis <- unfilt %>%
right_join(munis, by = c("GEOCODE" = "GEOID20"))
red_munis <- unfilt %>%
right_join(munis, by = c("GEOCODE" = "GEOID20")) %>%
mutate(`Any Black` = P0030011 + P0030016 + P0030017 + P0030018 + P0030019 + P0030027 + P0030028 + P0030029 + P0030030 + P0030037 + P0030038 + P0030039 + P0030040 + P0030041 + P0030048 + P0030049 + P0030050 + P0030051 + P0030052 + P0030053 + P0030042 + P0030058 + P0030059 + P0030060 + P0030061 + P0030062 + P0030064 + P0030065 + P0030066 + P0030067 + P0030069 + P0030071)
sum(red_munis$`Any Black`)
red_munis <- unfilt %>%
right_join(munis, by = c("GEOCODE" = "GEOID20")) %>%
mutate(`Any Black` = P0030004
+ P0030011 + P0030016 + P0030017 + P0030018 + P0030019 + P0030027 + P0030028 + P0030029 + P0030030 + P0030037 + P0030038 + P0030039 + P0030040 + P0030041 + P0030048 + P0030049 + P0030050 + P0030051 + P0030052 + P0030053 + P0030042 + P0030058 + P0030059 + P0030060 + P0030061 + P0030062 + P0030064 + P0030065 + P0030066 + P0030067 + P0030069 + P0030071)
sum(red_munis$`Any Black`)
unfilt <- read_csv("PA_REDISTRICTING_DATA.csv") %>%
select(GEOCODE, NAME20,
`Total Population` = P0010001,
`White Alone` = P0010003
`Black or African American alone` = P0010004,
`American Indian and Alaska Native alone` = P0010005,
`Asian alone` = P0010006,
`Native Hawaiian and Other Pacific Islander alone` = P0010007,
`Some Other Race alone` = P0010008,
`Population of two or more races` = P0010009
)
unfilt <- read_csv("PA_REDISTRICTING_DATA.csv") %>%
select(GEOCODE, NAME20,
`Total Population` = P0010001,
`White Alone` = P0010003,
`Black or African American alone` = P0010004,
`American Indian and Alaska Native alone` = P0010005,
`Asian alone` = P0010006,
`Native Hawaiian and Other Pacific Islander alone` = P0010007,
`Some Other Race alone` = P0010008,
`Population of two or more races` = P0010009
)
unfilt <- read_csv("PA_REDISTRICTING_DATA.csv") %>%
select(GEOCODE,
`Total Population` = P0010001,
`White Alone` = P0010003,
`Black or African American alone` = P0010004,
`American Indian and Alaska Native alone` = P0010005,
`Asian alone` = P0010006,
`Native Hawaiian and Other Pacific Islander alone` = P0010007,
`Some Other Race alone` = P0010008,
`Population of two or more races` = P0010009
)
red_munis <- unfilt %>%
right_join(munis, by = c("GEOCODE" = "GEOID20"))
munis <- st_read("tl_2020_us_county.zip")
counties <- st_read("tl_2020_us_county/tl_2020_us_county.shp")
counties <- st_read("tl_2020_us_county/tl_2020_us_county.shp") %>%
filter(STAEFP == "42")
counties <- st_read("tl_2020_us_county/tl_2020_us_county.shp") %>%
filter(STATEFP == "42")
counties <- st_read("tl_2020_us_county/tl_2020_us_county.shp") %>%
filter(STATEFP == "42") %>%
left_join(unfilt, by = c("GEOCODE" = "GEOID"))
counties <- st_read("tl_2020_us_county/tl_2020_us_county.shp") %>%
filter(STATEFP == "42") %>%
left_join(unfilt, by = c("GEOID" = "GEOCODE"))
View(counties)
require(leaflet)
popPal <- colorNumeric("YlOrRd", counties$`Total Population`)
leaflet(counties) %>%
addTiles() %>%
addPolygons(color = ~popPal(`Total Population`))
leaflet(counties) %>%
addTiles() %>%
addPolygons(color = ~popPal(`Total Population`),
popup = ~paste(NAME, "-", prettyNum(`Total Population`, big.mark = ",")))
View(counties)
unfilt <- read_csv("PA_REDISTRICTING_DATA.csv") %>%
rename(`Total Population` = P0010001,
`White Alone` = P0010003,
`Black or African American alone` = P0010004,
`American Indian and Alaska Native alone` = P0010005,
`Asian alone` = P0010006,
`Native Hawaiian and Other Pacific Islander alone` = P0010007,
`Some Other Race alone` = P0010008,
`Population of two or more races` = P0010009
)
View(unfilt)
counties <- st_read("tl_2020_us_county/tl_2020_us_county.shp") %>%
filter(STATEFP == "42", is.na(COUSUB)) %>%
left_join(unfilt, by = c("GEOID" = "GEOCODE"))
unfilt <- read_csv("PA_REDISTRICTING_DATA.csv") %>%
rename(`Total Population` = P0010001,
`White Alone` = P0010003,
`Black or African American alone` = P0010004,
`American Indian and Alaska Native alone` = P0010005,
`Asian alone` = P0010006,
`Native Hawaiian and Other Pacific Islander alone` = P0010007,
`Some Other Race alone` = P0010008,
`Population of two or more races` = P0010009
)
counties <- st_read("tl_2020_us_county/tl_2020_us_county.shp") %>%
filter(STATEFP == "42") %>%
left_join(unfilt, by = c("GEOID" = "GEOCODE")) %>%
filter(is.na(COUSUB))
counties <- st_read("tl_2020_us_county/tl_2020_us_county.shp")
View(counties)
counties <- st_read("tl_2020_us_county/tl_2020_us_county.shp") %>%
filter(STATEFP == "42")
View(counties)
counties_pop <- unfilt %>%
right_join(counties, by = c("GEOCODE" = "GEOID"))
counties_pop <- unfilt %>%
right_join(counties, by = c("GEOCODE" = "GEOID", "COUNTYNS"))
popPal <- colorNumeric("YlOrRd", counties_pop$`Total Population`)
leaflet(counties_pop) %>%
addTiles() %>%
addPolygons(color = ~popPal(`Total Population`),
popup = ~paste(NAME, "-", prettyNum(`Total Population`, big.mark = ",")))
popPal <- colorNumeric("YlOrRd", counties_pop$`Total Population`)
counties_pop <- unfilt %>%
right_join(counties, by = c("GEOCODE" = "GEOID", "COUNTYNS"))
popPal <- colorNumeric("YlOrRd", counties_pop$`Total Population`)
leaflet(counties_pop) %>%
addTiles() %>%
addPolygons(color = ~popPal(`Total Population`),
popup = ~paste(NAME, "-", prettyNum(`Total Population`, big.mark = ",")))
counties_pop <- counties %>%
right_join(unfilt, by = c("GEOCODE" = "GEOID", "COUNTYNS"))
counties_pop <- counties %>%
left_join(unfilt, by = c("GEOID" = "GEOCODE", "COUNTYNS"))
popPal <- colorNumeric("YlOrRd", counties_pop$`Total Population`)
leaflet(counties_pop) %>%
addTiles() %>%
addPolygons(color = ~popPal(`Total Population`),
popup = ~paste(NAME, "-", prettyNum(`Total Population`, big.mark = ",")))
counties_pop <- counties %>%
left_join(unfilt, by = c("GEOID" = "GEOCODE", "COUNTYNS", "NAME"))
counties_pop <- counties %>%
left_join(unfilt, by = c("GEOID" = "GEOCODE", "COUNTYNS", "NAME", "FUNCSTAT, INTPLAT, INTPTLON"))
counties_pop <- counties %>%
left_join(unfilt, by = c("GEOID" = "GEOCODE", "COUNTYNS", "NAME", "FUNCSTAT, INTPTLAT, INTPTLON"))
counties <- st_read("tl_2020_us_county/tl_2020_us_county.shp") %>%
filter(STATEFP == "42")
counties_pop <- counties %>%
left_join(unfilt, by = c("GEOID" = "GEOCODE", "COUNTYNS", "NAME", "FUNCSTAT, INTPTLAT, INTPTLON"))
counties_pop <- counties %>%
left_join(unfilt, by = c("GEOID" = "GEOCODE", "COUNTYNS", "NAME", "FUNCSTAT", "INTPTLAT", "INTPTLON"))
counties_pop <- counties %>%
mutate(INTPLAT = as.character(INTPLAT)) %>%
left_join(unfilt, by = c("GEOID" = "GEOCODE", "COUNTYNS", "NAME", "FUNCSTAT", "INTPTLAT", "INTPTLON"))
counties_pop <- counties %>%
mutate(INTPLAT = as.character(INTPTLAT)) %>%
left_join(unfilt, by = c("GEOID" = "GEOCODE", "COUNTYNS", "NAME", "FUNCSTAT", "INTPTLAT", "INTPTLON"))
counties_pop <- counties %>%
mutate(INTPLAT = as.numeric(INTPTLAT)) %>%
left_join(unfilt, by = c("GEOID" = "GEOCODE", "COUNTYNS", "NAME", "FUNCSTAT", "INTPTLAT", "INTPTLON"))
counties_pop <- counties %>%
mutate(INTPTLAT = as.numeric(INTPTLAT)) %>%
left_join(unfilt, by = c("GEOID" = "GEOCODE", "COUNTYNS", "NAME", "FUNCSTAT", "INTPTLAT", "INTPTLON"))
counties_pop <- counties %>%
mutate(INTPTLAT = as.character(INTPTLAT)) %>%
left_join(unfilt, by = c("GEOID" = "GEOCODE", "COUNTYNS", "NAME", "FUNCSTAT", "INTPTLAT", "INTPTLON"))
counties_pop <- counties %>%
mutate(INTPTLAT = as.character(INTPTLAT)) %>%
left_join(unfilt, by = c("GEOID" = "GEOCODE", "COUNTYNS", "NAME", "FUNCSTAT", "INTPTLAT", "INTPTLON"))
counties_pop <- counties %>%
mutate(INTPTLAT = as.numeric(INTPTLAT)) %>%
left_join(unfilt, by = c("GEOID" = "GEOCODE", "COUNTYNS", "NAME", "FUNCSTAT", "INTPTLAT", "INTPTLON"))
unfilt <- read_csv("PA_REDISTRICTING_DATA.csv") %>%
rename(`Total Population` = P0010001,
`White Alone` = P0010003,
`Black or African American alone` = P0010004,
`American Indian and Alaska Native alone` = P0010005,
`Asian alone` = P0010006,
`Native Hawaiian and Other Pacific Islander alone` = P0010007,
`Some Other Race alone` = P0010008,
`Population of two or more races` = P0010009
)%>%
mutate(INTPTLAT = as.numeric(INTPTLAT))
counties_pop <- counties  %>%
left_join(unfilt, by = c("GEOID" = "GEOCODE", "COUNTYNS", "NAME", "FUNCSTAT", "INTPTLAT", "INTPTLON"))
unfilt <- read_csv("PA_REDISTRICTING_DATA.csv") %>%
rename(`Total Population` = P0010001,
`White Alone` = P0010003,
`Black or African American alone` = P0010004,
`American Indian and Alaska Native alone` = P0010005,
`Asian alone` = P0010006,
`Native Hawaiian and Other Pacific Islander alone` = P0010007,
`Some Other Race alone` = P0010008,
`Population of two or more races` = P0010009
) %>%
mutate(INTPTLAT = as.character(INTPTLAT))
counties_pop <- counties  %>%
left_join(unfilt, by = c("GEOID" = "GEOCODE", "COUNTYNS", "NAME", "FUNCSTAT", "INTPTLAT", "INTPTLON"))
unfilt <- read_csv("PA_REDISTRICTING_DATA.csv") %>%
rename(`Total Population` = P0010001,
`White Alone` = P0010003,
`Black or African American alone` = P0010004,
`American Indian and Alaska Native alone` = P0010005,
`Asian alone` = P0010006,
`Native Hawaiian and Other Pacific Islander alone` = P0010007,
`Some Other Race alone` = P0010008,
`Population of two or more races` = P0010009
) %>%
mutate(INTPTLAT = as.character(INTPTLAT),
INTPTLON = as.character(INTPTLON))
counties_pop <- counties  %>%
left_join(unfilt, by = c("GEOID" = "GEOCODE", "COUNTYNS", "NAME", "FUNCSTAT", "INTPTLAT", "INTPTLON"))
popPal <- colorNumeric("YlOrRd", counties_pop$`Total Population`)
leaflet(counties_pop) %>%
addTiles() %>%
addPolygons(color = ~popPal(`Total Population`),
popup = ~paste(NAME, "-", prettyNum(`Total Population`, big.mark = ",")))
counties_pop <- counties  %>%
left_join(unfilt, by = c("GEOID" = "GEOCODE", "COUNTYNS", "NAME"))
popPal <- colorNumeric("YlOrRd", counties_pop$`Total Population`)
leaflet(counties_pop) %>%
addTiles() %>%
addPolygons(color = ~popPal(`Total Population`),
popup = ~paste(NAME, "-", prettyNum(`Total Population`, big.mark = ",")))
leaflet(counties_pop) %>%
addTiles() %>%
addPolygons(color = ~popPal(`Total Population`),
popup = ~paste(NAME.X, "-", prettyNum(`Total Population`, big.mark = ",")))
counties_pop <- counties  %>%
left_join(unfilt, by = c("GEOID" = "GEOCODE", "COUNTYNS"))
leaflet(counties_pop) %>%
addTiles() %>%
addPolygons(color = ~popPal(`Total Population`),
popup = ~paste(NAME.X, "-", prettyNum(`Total Population`, big.mark = ",")))
popPal <- colorNumeric("YlOrRd", counties_pop$`Total Population`)
leaflet(counties_pop) %>%
addTiles() %>%
addPolygons(color = ~popPal(`Total Population`),
popup = ~paste(NAME.X, "-", prettyNum(`Total Population`, big.mark = ",")))
leaflet(counties_pop) %>%
addTiles() %>%
addPolygons(color = ~popPal(`Total Population`),
popup = ~paste(`NAME.X`, "-", prettyNum(`Total Population`, big.mark = ",")))
leaflet(counties_pop) %>%
addTiles() %>%
addPolygons(color = ~popPal(`Total Population`),
popup = ~paste(`NAME.x`, "-", prettyNum(`Total Population`, big.mark = ",")))
leaflet(counties_pop) %>%
addTiles() %>%
addPolygons(color = ~popPal(`Total Population`),
popup = ~paste0(`NAME.x`, ": ", prettyNum(`Total Population`, big.mark = ",")))
blackPal <- colorNumeric("Blues", counties_pop$`Black or African American alone`)
leaflet(counties_pop) %>%
addTiles() %>%
addPolygons(color = ~blackPal(`Black or African American alone`),
popup = ~paste0(`NAME.x`, ": ", prettyNum(`Black or African American alone`, big.mark = ",")))
blackPal <- colorNumeric("Blues", counties_pop$`Black or African American alone`)
leaflet(counties_pop) %>%
addTiles() %>%
addPolygons(color = ~blackPal(`Black or African American alone`),
popup = ~paste0(`NAME.x`, ": ", prettyNum(`Black or African American alone`, big.mark = ",")))
leaflet(counties_pop) %>%
addTiles() %>%
addPolygons(color = ~popPal(`Total Population`),
fill = TRUE,
popup = ~paste0(`NAME.x`, ": ", prettyNum(`Total Population`, big.mark = ",")))
leaflet(counties_pop) %>%
addTiles() %>%
addPolygons(color = ~popPal(`Total Population`),
fillOpacity = .8,
popup = ~paste0(`NAME.x`, ": ", prettyNum(`Total Population`, big.mark = ",")))
leaflet(counties_pop) %>%
addTiles() %>%
addPolygons(color = ~popPal(`Total Population`),
fillOpacity = .65,
popup = ~paste0(`NAME.x`, ": ", prettyNum(`Total Population`, big.mark = ",")))
leaflet(counties_pop) %>%
addTiles() %>%
addPolygons(color = ~blackPal(`Black or African American alone`),
fillOpacity = .65,
popup = ~paste0(`NAME.x`, ": ", prettyNum(`Black or African American alone`, big.mark = ",")))
leaflet(counties_pop) %>%
addTiles() %>%
addPolygons(color = ~blackPal(`Black or African American alone`),
fillOpacity = .65,
label = ~`NAME.x`,
popup = ~paste0(`NAME.x`, ": ", prettyNum(`Black or African American alone`, big.mark = ",")))
leaflet(counties_pop) %>%
addTiles() %>%
addPolygons(color = ~blackPal(`Black or African American alone`),
fillOpacity = .65,
label = ~`NAME.x`,
popup = ~paste0(NAMELSAD, ": ", prettyNum(`Black or African American alone`, big.mark = ",")))
dotenv::load_dot_env()
require(tidycensus)
census_api_key(Sys.getenv("census"))
require(dplyr)
get_acs("county", state = 42, county = "03", year = 2018)
get_acs("county", state = 42, county = "03", year = 2018, variable = "P013001")
load_variables(2018, "acs5", cache = TRUE)
vars <- load_variables(2018, "acs5", cache = TRUE)
View(vars)
get_acs("county", state = 42, county = "03", year = 2018, variable = "B00001_001")
get_acs("county", state = 42, county = "03", year = 2018, variable = "B01001_001")
muni <- get_acs("county subdivison", state = 42, county = "03", year = 2018, variable = "B01001_001")
muni <- get_acs("county subdivision", state = 42, county = "03", year = 2018, variable = "B01001_001")
View(muni)
years <- 2016:2020
alco_final <- data.frame()
for (year in years) {
alco_final <- get_acs("county", state = 42, county = "03", year = year, variable = "B01001_001") %>%
mutate(year = year) %>%
bind_rows(alco_final)
muni_final <- get_acs("county subdivision", state = 42, county = "03", year = year, variable = "B01001_001") %>%
mutate(year = year) %>%
bind_rows(muni_final)
}
alco_final <- data.frame()
munis_final <- data.frame()
for (year in years) {
alco_final <- get_acs("county", state = 42, county = "03", year = year, variable = "B01001_001") %>%
mutate(year = year) %>%
bind_rows(alco_final)
muni_final <- get_acs("county subdivision", state = 42, county = "03", year = year, variable = "B01001_001") %>%
mutate(year = year) %>%
bind_rows(muni_final)
}
for (year in years) {
alco_final <- get_acs("county", state = 42, county = "03", year = year, variable = "B01001_001") %>%
mutate(year = year) %>%
bind_rows(alco_final)
muni_final <- get_acs("county subdivision", state = 42, county = "03", year = year, variable = "B01001_001") %>%
mutate(year = year) %>%
bind_rows(muni_final)
}
alco_final <- data.frame()
munis_final <- data.frame()
for (year in years) {
alco_final <- get_acs("county", state = 42, county = "03", year = year, variable = "B01001_001") %>%
mutate(year = year) %>%
bind_rows(alco_final)
munis_final <- get_acs("county subdivision", state = 42, county = "03", year = year, variable = "B01001_001") %>%
mutate(year = year) %>%
bind_rows(munis_final)
}
years <- 2016:2019
alco_final <- data.frame()
munis_final <- data.frame()
for (year in years) {
alco_final <- get_acs("county", state = 42, county = "03", year = year, variable = "B01001_001") %>%
mutate(year = year) %>%
bind_rows(alco_final)
munis_final <- get_acs("county subdivision", state = 42, county = "03", year = year, variable = "B01001_001") %>%
mutate(year = year) %>%
bind_rows(munis_final)
}
View(alco_final)
View(alco_final)
years <- 2011:2019
alco_final <- data.frame()
munis_final <- data.frame()
for (year in years) {
alco_final <- get_acs("county", state = 42, county = "03", year = year, variable = "B01001_001") %>%
mutate(year = year) %>%
bind_rows(alco_final)
munis_final <- get_acs("county subdivision", state = 42, county = "03", year = year, variable = "B01001_001") %>%
mutate(year = year) %>%
bind_rows(munis_final)
}
View(alco_final)
years <- 2016:2019
alco_final <- data.frame()
munis_final <- data.frame()
for (year in years) {
alco_final <- get_acs("county", state = 42, county = "03", year = year, variable = "B00001_0011") %>%
mutate(year = year) %>%
bind_rows(alco_final)
munis_final <- get_acs("county subdivision", state = 42, county = "03", year = year, variable = "B00001_001") %>%
mutate(year = year) %>%
bind_rows(munis_final)
}
for (year in years) {
alco_final <- get_acs("county", state = 42, county = "03", year = year, variable = "B00001_001") %>%
mutate(year = year) %>%
bind_rows(alco_final)
munis_final <- get_acs("county subdivision", state = 42, county = "03", year = year, variable = "B00001_001") %>%
mutate(year = year) %>%
bind_rows(munis_final)
}
alco_final <- data.frame()
munis_final <- data.frame()
for (year in years) {
alco_final <- get_acs("county", state = 42, county = "03", year = year, variable = "B00001_001") %>%
mutate(year = year) %>%
bind_rows(alco_final)
munis_final <- get_acs("county subdivision", state = 42, county = "03", year = year, variable = "B00001_001") %>%
mutate(year = year) %>%
bind_rows(munis_final)
}
View(alco_final)
View(alco_final)
years <- 2011:2019
alco_final <- data.frame()
munis_final <- data.frame()
for (year in years) {
alco_final <- get_acs("county", state = 42, county = "03", year = year, variable = "B01001_001") %>%
mutate(year = year) %>%
bind_rows(alco_final)
munis_final <- get_acs("county subdivision", state = 42, county = "03", year = year, variable = "B01001_001") %>%
mutate(year = year) %>%
bind_rows(munis_final)
}
years <- 2016:2019
alco_final <- data.frame()
munis_final <- data.frame()
for (year in years) {
alco_final <- get_acs("county", state = 42, county = "03", year = year, variable = "B01001_001") %>%
mutate(year = year) %>%
bind_rows(alco_final)
munis_final <- get_acs("county subdivision", state = 42, county = "03", year = year, variable = "B01001_001") %>%
mutate(year = year) %>%
bind_rows(munis_final)
}
View(munis_final)
